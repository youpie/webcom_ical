//! `SeaORM` Entity, @generated by sea-orm-codegen 2.0.0-rc.9

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "user_data")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub user_data_id: i32,
    pub personeelsnummer: String,
    pub password: String,
    pub email: String,
    pub file_name: String,
    pub user_properties: i32,
    pub custom_general_properties: Option<i32>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::user_properties::Entity",
        from = "Column::UserProperties",
        to = "super::user_properties::Column::UserPropertiesId",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    UserProperties,
}

impl Related<super::user_properties::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UserProperties.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
