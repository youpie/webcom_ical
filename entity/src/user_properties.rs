//! `SeaORM` Entity, @generated by sea-orm-codegen 2.0.0-rc.9

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "user_properties")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub user_properties_id: i32,
    pub execution_interval_minutes: i32,
    pub send_mail_new_shift: bool,
    pub send_mail_updated_shift: bool,
    pub send_mail_removed_shift: bool,
    pub send_failed_signin_mail: bool,
    pub send_welcome_mail: bool,
    pub send_error_mail: bool,
    pub split_night_shift: bool,
    pub stop_midnight_shift: bool,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::user_data::Entity")]
    UserData,
}

impl Related<super::user_data::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UserData.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
